<?xml version="1.0" encoding="UTF-8"?>
<project name="systemProj" basedir="." default="build">
  <!--  定义打包的路径  -->
  <property name="env" value="prd" />
   <!--  自定义业务系统名称  -->
  <property name="system" value="epwm" />
  <property name="build.dir" value="./build/" />
  <!--  清除服务器上面的zip包  -->
  <target name="init">
    <echo message=" ====== 清除服务器上面的tar包，初始化打包路径 ======" />
    <delete dir="${build.dir}" />
    <mkdir dir="${build.dir}" />
  </target>
  <!--  打zip 包  -->
  <target name="tarNode" depends="init" >
    <echo message=" ====== 清除${env}环境的app.json ====== " />
    <delete file="${basedir}/etc/app.json"/> 
  </target>
  <target name="Copy" depends='tarNode'>
     <echo message=" ====== 拷贝${env}环境参数json文件 ====== " />
    <copy tofile="${basedir}/etc/app.json" file="${basedir}/etc/${env}.json" />
      </target>
        <target name="NpmInstall" depends="Copy">
        <echo message=" ====== ${env}环境npm install依赖包 ====== " />
    <exec executable="npm">
    <arg line="install"/>
    </exec>
    </target>
      <target name="NpmBuild" depends="NpmInstall">
      <echo message=" ====== ${env}环境npm run build依赖包 ====== " />
     <exec executable="npm">
    <arg line="run build"/>
    </exec>
    </target>
    <target name="ZipCopy" depends="NpmBuild">
    <echo message=" ====== ${env}生成${system}-fres.zip包到${build.dir}中 ======" />
    <zip destfile="${build.dir}/${system}-fres.zip" duplicate="preserve">
      <zipfileset dir="${basedir}/publish" includes="**/*.*"
                  prefix="${system}"/>
    </zip>
    </target>
    <target name="TarCopy" depends="ZipCopy">
    <echo message=" ====== ${env}拷贝打包服务器上面的server包======" />
    <copy todir="${build.dir}/temp" overwrite="true">
    <fileset dir="${basedir}">
      <exclude name="package-lock.json" />
      <exclude name="${build.dir}/" /> <!-- 排除所有java文件 -->
      <exclude name="node_modules/" /> <!-- 排除根目录下整个helloworld文件夹 -->
    </fileset>
    </copy>
    </target>
      <target name="TarCompress" depends="TarCopy">
<echo message=" ====== 生成${system}-node.tar包到${build.dir}中 ======" />
            <!--mk-node.tar daixiugai -->
    <tar destfile="${build.dir}/mk-node.tar" basedir="${build.dir}/temp" includes="**/*.*"/>
     </target>
           <target name="CleanTemp" depends="TarCompress">
    <echo message=" ====== 清除服务器上面的temp临时包，初始化打包路径 ======" />
    <delete dir="${build.dir}/temp" />
  </target>
  <target name="build" depends="CleanTemp">
    <echo message=" ====== 构建结束 ======" />
  </target>
</project>


